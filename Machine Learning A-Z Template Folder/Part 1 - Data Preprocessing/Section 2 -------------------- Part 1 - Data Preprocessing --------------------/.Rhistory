install.packages('caTools')
library("caTools", lib.loc="~/R/win-library/3.5")
library("bitops", lib.loc="~/R/win-library/3.5")
detach("package:bitops", unload=TRUE)
detach("package:caTools", unload=TRUE)
library(caTools)
set.seed(123)
# splitRation is ration for training set
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
# read csv
dataset = read.csv('Data.csv')
# handle missing data
# for ifelse, first parameter is if the data is missing(NaN)
# second parameter is use ave function to calculate average
#   the first parateter for ave is the data
#   second parameter is function actually calculate mean, na.rm = True so it take NaN as one element
# third parameter is if data is not NaN
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('Yes','No'),
labels = c(1,0))
# install.packages('caTools')
library(caTools)
# seed value to split
set.seed(123)
# splitRation is ration for training set
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
dataset = read.csv('Data.csv')
load("D:/cmpt/udemy machine learning/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/.RData")
# read csv
dataset = read.csv('Data.csv')
# handle missing data
# for ifelse, first parameter is if the data is missing(NaN)
# second parameter is use ave function to calculate average
#   the first parateter for ave is the data
#   second parameter is function actually calculate mean, na.rm = True so it take NaN as one element
# third parameter is if data is not NaN
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('Yes','No'),
labels = c(1,0))
# install.packages('caTools')
library(caTools)
# seed value to split
set.seed(123)
# splitRation is ration for training set
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
# read csv
dataset = read.csv('Data.csv')
# handle missing data
# for ifelse, first parameter is if the data is missing(NaN)
# second parameter is use ave function to calculate average
#   the first parateter for ave is the data
#   second parameter is function actually calculate mean, na.rm = True so it take NaN as one element
# third parameter is if data is not NaN
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('Yes','No'),
labels = c(1,0))
# install.packages('caTools')
library(caTools)
# seed value to split
set.seed(123)
# splitRation is ration for training set
# return a list contain True/False means split, so for 10 data, 8 true and 2 false
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(training_set)
View(test_set)
View(training_set)
dataset$Purchased = factor(dataset$Purchased,
levels = c('Yes','No'),
labels = c(1,0))
# read csv
dataset = read.csv('Data.csv')
# handle missing data
# for ifelse, first parameter is if the data is missing(NaN)
# second parameter is use ave function to calculate average
#   the first parateter for ave is the data
#   second parameter is function actually calculate mean, na.rm = True so it take NaN as one element
# third parameter is if data is not NaN
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('Yes','No'),
labels = c(1,0))
# install.packages('caTools')
library(caTools)
# seed value to split
set.seed(123)
# splitRation is ration for training set
# return a list contain True/False means split, so for 10 data, 8 true and 2 false
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
# read csv
dataset = read.csv('Data.csv')
# handle missing data
# for ifelse, first parameter is if the data is missing(NaN)
# second parameter is use ave function to calculate average
#   the first parateter for ave is the data
#   second parameter is function actually calculate mean, na.rm = True so it take NaN as one element
# third parameter is if data is not NaN
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
# read csv
dataset = read.csv('Data.csv')
# handle missing data
# for ifelse, first parameter is if the data is missing(NaN)
# second parameter is use ave function to calculate average
#   the first parateter for ave is the data
#   second parameter is function actually calculate mean, na.rm = True so it take NaN as one element
# third parameter is if data is not NaN
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('Yes','No'),
labels = c(1,0))
# install.packages('caTools')
library(caTools)
# seed value to split
set.seed(123)
# splitRation is ration for training set
# return a list contain True/False means split, so for 10 data, 8 true and 2 false
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(test_set)
View(test_set)
View(training_set)
View(training_set)
View(dataset)
source('D:/cmpt/udemy machine learning/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------/data-pre-processing.R')
setwd("D:/cmpt/udemy machine learning/Machine Learning A-Z Template Folder/Part 1 - Data Preprocessing/Section 2 -------------------- Part 1 - Data Preprocessing --------------------")
# read csv
dataset = read.csv('Data.csv')
# handle missing data
# for ifelse, first parameter is if the data is missing(NaN)
# second parameter is use ave function to calculate average
#   the first parateter for ave is the data
#   second parameter is function actually calculate mean, na.rm = True so it take NaN as one element
# third parameter is if data is not NaN
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('Yes','No'),
labels = c(1,0))
# install.packages('caTools')
library(caTools)
# seed value to split
set.seed(123)
# splitRation is ration for training set
# return a list contain True/False means split, so for 10 data, 8 true and 2 false
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(dataset)
View(test_set)
training_set = subset(dataset, split == TRUE)
# read csv
dataset = read.csv('Data.csv')
# handle missing data
# for ifelse, first parameter is if the data is missing(NaN)
# second parameter is use ave function to calculate average
#   the first parateter for ave is the data
#   second parameter is function actually calculate mean, na.rm = True so it take NaN as one element
# third parameter is if data is not NaN
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('Yes','No'),
labels = c(1,0))
# install.packages('caTools')
library(caTools)
# seed value to split
set.seed(123)
# splitRation is ration for training set
# return a list contain True/False means split, so for 10 data, 8 true and 2 false
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
View(dataset)
View(dataset)
# read csv
dataset = read.csv('Data.csv')
# handle missing data
# for ifelse, first parameter is if the data is missing(NaN)
# second parameter is use ave function to calculate average
#   the first parateter for ave is the data
#   second parameter is function actually calculate mean, na.rm = True so it take NaN as one element
# third parameter is if data is not NaN
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Age)
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary, FUN = function(x) mean(x,na.rm = TRUE)),
dataset$Salary)
dataset$Country = factor(dataset$Country,
levels = c('France','Spain','Germany'),
labels = c(1,2,3))
dataset$Purchased = factor(dataset$Purchased,
levels = c('Yes','No'),
labels = c(1,0))
# install.packages('caTools')
library(caTools)
# seed value to split
set.seed(123)
# splitRation is ration for training set
# return a list contain True/False means split, so for 10 data, 8 true and 2 false
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
View(test_set)
View(training_set)
